/*
배열 나누기
함수 division은 특정한 배열을 내가 원하는 원소의 갯수를 길이로 가진 배열들로 분해하려고한다
이후, 해당 배열들을 요소로 갖는 배열을 반환한다

ex) 길이기 80인 배열은 길이가 5로 분해한다면 16개의 배열을 요소로 갖는 배열을 반환한다
    ex) [1...80] => [[1...5], [6...10], [11...15], ... , [76...80]]
*/
newArr = [];
arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];

function division(arr, num) {
  // 함수의 arr, num 2개를 받는다
  // 이때 arr은 분해하려는 배열, num은 분해할 길이
  for (let i = 0; i < arr.length / num; i++) {
    // 반복 횟수를 arr.length / num 으로 설정
    // 만약 길이가 80인 배열을 길이가 5인 배열로 분해한다면 80 / 5 = 16 => 길이가 5인 배열이 16개
    // 만약 길이가 48인 배열을 길이가 4인 배열로 분해한다면 48 / 4 = 12 => 길이가 4인 배열이 12개
    // 따라서 반복횟수를 "배열의 길이 / 분해할 길이"로 정의
    newIndex = arr.slice(num * i, num * (i + 1));
    // 배열을 길이가 num 개로 분해하려고 한다.
    // 길이가 80인 배열을 길이가 5인 배열로 분해한다고 가정하면
    // i = 0일때 첫번째 반복 num * i = 0 , num * (i + 1) = 5 => 따라서 arr[0] ~ arr[4]이 새로운 배열을 형성
    // 이 과정을 i가 arr.length / num = 16, i가 15일때까지 반복
    // i = 15일때 마지막 반복 num * i = 75, num * (i + 1) = 80 => 따라서 arr[75] ~ arr[80]이 새로운 배열을 형성
    newArr.push(newIndex);
    // 위에서 num개로 분해된 배열을 newArr에 push
  }
  return newArr;
  // 새로 만들어진 배열을 반환
}

console.log(division(arr1, 12));
